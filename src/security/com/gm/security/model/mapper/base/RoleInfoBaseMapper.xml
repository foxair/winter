<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gm.security.model.RoleInfo">
	<!-- open cache -->
	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>

	<resultMap id="RM.RoleInfo" type="com.gm.security.model.RoleInfo">
        <result property="roleInfoId" column="role_info_id"/>
        <result property="roleName" column="role_name"/>
        <result property="superRoleId" column="super_role_id"/>
        <result property="description" column="description"/>
        <result property="note" column="note"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		role_info_id,role_name,super_role_id,description,note
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="roleInfoId">
    <![CDATA[
        INSERT INTO role_info (
        	role_info_id ,
        	role_name ,
        	super_role_id ,
        	description ,
        	note 
        ) VALUES (
        	#{roleInfoId} ,
        	#{roleName} ,
        	#{superRoleId} ,
        	#{description} ,
        	#{note} 
        )
    ]]>

		<!--
	    	<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="roleInfoId">
				SELECT LAST_INSERT_ID()
	        </selectKey>
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="update" >
    <![CDATA[
        UPDATE role_info SET
	        role_name = #{roleName} ,
	        super_role_id = #{superRoleId} ,
	        description = #{description} ,
	        note = #{note} 
        WHERE 
	        role_info_id = #{roleInfoId} 
    ]]>
	</update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM role_info WHERE
        role_info_id = #{id} 
    ]]>
    </delete>
    
	<delete id="deleteIds">
	<![CDATA[
		DELETE FROM role_info WHERE
        role_info_id
		 in 
	]]>
		<foreach collection="array" item="ids" open="(" separator="," close=")">#{ids}</foreach>
	</delete>
    
    <select id="getById" resultMap="RM.RoleInfo">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM role_info 
	        WHERE 
		        role_info_id = #{id} 
	    ]]>
	</select>
		
    <select id="count" resultType="long">
        SELECT count(*) FROM role_info 
		<include refid="where"/>
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="RM.RoleInfo">
    	SELECT <include refid="columns" />
	    FROM role_info
		<include refid="where"/>
		<if test="@com.gm.common.orm.mybatis.Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
	
	<select id="findAll" resultMap="RM.RoleInfo">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM role_info 
	    ]]>
	    <if test="@com.gm.common.orm.mybatis.Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
	</select>
	
	<select id="find" resultMap="RM.RoleInfo">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM role_info 
	    ]]>
	    <include refid="where"/>
	    <if test="@com.gm.common.orm.mybatis.Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
	</select>

	
	
	<sql id="where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用Ognl.isNotEmpty()方法,具体请查看Ognl类 -->
		<where>	      				
			<if test="@com.gm.common.orm.mybatis.Ognl@isNotEmpty(roleInfoId)">
				<if test="@com.gm.common.orm.mybatis.Ognl@isNotEmpty(conditions.roleInfoId)">${conditions.roleInfoId.condition}</if> role_info_id <if test="@com.gm.common.orm.mybatis.Ognl@isNotEmpty(conditions.roleInfoId)">${conditions.roleInfoId.compare.value}</if> #{roleInfoId}
			</if>
			<if test="@com.gm.common.orm.mybatis.Ognl@isNotEmpty(roleName)">
				<if test="@com.gm.common.orm.mybatis.Ognl@isNotEmpty(conditions.roleName)">${conditions.roleName.condition}</if> role_name <if test="@com.gm.common.orm.mybatis.Ognl@isNotEmpty(conditions.roleName)">${conditions.roleName.compare.value}</if> #{roleName}
			</if>
			<if test="@com.gm.common.orm.mybatis.Ognl@isNotEmpty(superRoleId)">
				<if test="@com.gm.common.orm.mybatis.Ognl@isNotEmpty(conditions.superRoleId)">${conditions.superRoleId.condition}</if> super_role_id <if test="@com.gm.common.orm.mybatis.Ognl@isNotEmpty(conditions.superRoleId)">${conditions.superRoleId.compare.value}</if> #{superRoleId}
			</if>
			<if test="@com.gm.common.orm.mybatis.Ognl@isNotEmpty(description)">
				<if test="@com.gm.common.orm.mybatis.Ognl@isNotEmpty(conditions.description)">${conditions.description.condition}</if> description <if test="@com.gm.common.orm.mybatis.Ognl@isNotEmpty(conditions.description)">${conditions.description.compare.value}</if> #{description}
			</if>
			<if test="@com.gm.common.orm.mybatis.Ognl@isNotEmpty(note)">
				<if test="@com.gm.common.orm.mybatis.Ognl@isNotEmpty(conditions.note)">${conditions.note.condition}</if> note <if test="@com.gm.common.orm.mybatis.Ognl@isNotEmpty(conditions.note)">${conditions.note.compare.value}</if> #{note}
			</if>
		</where>
	</sql>
</mapper>